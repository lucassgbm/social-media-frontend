image: docker:stable

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: always

cache:
  key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
  paths:
    - node_modules/
    - .next/
    
stages:
  - npm-build
  - docker-build
  - deploy

variables:
  IMAGE: social-frontend:latest
  BASE_IMAGE: node:18-alpine
  RUNNER_TAG: social-media-frontend
  APPNAME: social-frontend
  
npm-build:
  stage: npm-build
  environment: $CI_COMMIT_BRANCH
  tags:
    - $RUNNER_TAG
  image: node:18-alpine
  script:
    - cp .env.default .env.local 
    - sed -i "s|CHANGEURL|$API_URL|g" .env.local    
    - npm ci 
    - npm run build  

docker-build:
  stage: docker-build
  environment: $CI_COMMIT_BRANCH
  tags:
    - $RUNNER_TAG 
  image: docker:stable  
  services:
    - name: docker:dind
  script:  
    - docker build . --build-arg BASE_IMAGE=$BASE_IMAGE -t $IMAGE
    

deploy:   
  stage: deploy
  environment: $CI_COMMIT_BRANCH  
  tags:
    - $RUNNER_TAG  
  image: docker:stable
  cache: []
  # before_script:
  #   - apk add --no-cache docker-compose   # instala no Alpine (imagem docker:stable Ã© baseada em Alpine)
  script: 
    - docker stop $APPNAME
    - docker rm $APPNAME            
    - docker run -d -p 3000:3000 --name $APPNAME $IMAGE
    
    