image: docker:stable

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: always

cache:
  key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
  paths:
    - node_modules/
    - .next/
    
stages:
  - npm-build
  - docker-build
  - deploy

variables:
  IMAGE: registry.gitlab.com/mouragilvan/social-media-frontend/social-frontend:$CI_COMMIT_SHORT_SHA
  BASE_IMAGE: node:18-alpine
  RUNNER_TAG: social-media-backend


npm-build:   
  stage: npm-build
  tags:
    - $RUNNER_TAG   
  image: 
    name: $BASE_IMAGE
    entrypoint: [""]    
  script:
    - npm ci
    - npm run build

docker-build:
  stage: docker-build
  environment: $CI_COMMIT_BRANCH
  tags:
    - $RUNNER_TAG 
  image: docker:stable  
  services:
    - name: docker:dind
  script:        
    - cp .env.example .env 
    #- sed -i "s|\[REPLACE_WITH_DB_USERNAME\]|$DB_DATA_USERNAME|g" .env
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker build . --build-arg BASE_IMAGE=$BASE_IMAGE -t $IMAGE
    - docker push $IMAGE    

deploy:   
  stage: deploy
  environment: $CI_COMMIT_BRANCH  
  tags:
    - $RUNNER_TAG  
  image: docker:stable
  cache: []
  before_script:
    - apk add --no-cache docker-compose   # instala no Alpine (imagem docker:stable Ã© baseada em Alpine)
  script:
    - sed -i "s|CHANGEIMAGE|$IMAGE|g" docker-compose.yml
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker pull $IMAGE   
    - docker-compose up -d
    